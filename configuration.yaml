homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret home_lat
  longitude: !secret home_lon
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 0
  # metric for Metric, imperial for Imperial
  unit_system: imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/New_York
  # Customization file
  customize: !include customize.yaml

# Enables the frontend
frontend:
  themes: !include themes.yaml

lovelace:
  mode: yaml

http:
  base_url: !secret duckdns_base_url
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem
  trusted_networks:
    - 127.0.0.1
    - 192.168.1.0/24

# Enables configuration UI
config:

# Checks for available updates
updater:
  # Optional, allows Home Assistant developers to focus on popular components.

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

# Text to speech
tts:
  - platform: google

# Cloud
cloud:
  google_actions:
    filter:
      include_entities:
        - media_player.sunroom_speakers
        - media_player.playroom_speakers
        - media_player.office_speakers
        - media_player.kitchen_speakers
        - media_player.family_room_speakers
        - script.all_speakers_turn_on
        - script.all_speakers_turn_off
        - switch.office_desk_light
        - switch.office_left_shelf_lamp
        - switch.office_right_shelf_lamp
      include_domains:
        - light
        - cover
        - scene
      exclude_entities:
        - script.all_speakers_volume
        - script.all_speakers_source
        - script.set_speaker_source
        - script.send_text_message
    entity_config:
      media_player.sunroom_speakers:
        name: Sunroom Speakers
      media_player.playroom_speakers:
        name: Playroom Speakers
      media_player.office_speakers:
        name: Office Speakers
      media_player.kitchen_speakers:
        name: Kitchen Speakers
      media_player.family_room_speakers:
        name: Family Room Speakers

media_player: !include monoprice.yaml

ecobee:
  api_key: !secret ecobee_api_key

nest:
  client_id: !secret nest_client_id
  client_secret: !secret nest_client_secret

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml

panel_iframe:
  configurator:
    title: Configurator
    icon: mdi:wrench
    url: http://hassio.local:3218

cover:
  - platform: myq
    username: !secret myq_username
    password: !secret myq_password
    type: liftmaster

twilio:
  account_sid: !secret twilio_account_sid
  auth_token: !secret twilio_auth_token

notify:
  - name: twilio
    platform: twilio_sms
    from_number: !secret twilio_from_number

device_tracker:
  - platform: unifi
    host: !secret unifi_host
    verify_ssl: false
    username: !secret unifi_username
    password: !secret unifi_password
    new_device_defaults:
      track_new_devices: false

scene: !include scenes.yaml

lutron_caseta:
    host: !secret lutron_host
    keyfile: caseta/caseta.key
    certfile: caseta/caseta.crt
    ca_certs: caseta/caseta-bridge.crt

input_number:
  speaker_volume:
    name: Speaker Volume
    initial: 0.2
    min: 0
    max: 1
    step: 0.01
    icon: mdi:volume-high

input_select:
  speaker_source:
    name: Speaker Source
    options: ["Chromecast","TV","Office","Record Player"]
    initial: "Chromecast"
    icon: mdi:speaker-wireless

sensor:
  - platform: template
    sensors:
      outdoor_temperature:
        friendly_name: "Outdoor Temperature"
        unit_of_measurement: '°F'
        value_template: "{{ state_attr('weather.main_floor', 'temperature') }}"
      hvac_operation:
        friendly_name: "HVAC Status"
        value_template: "{{ state_attr('climate.main_floor', 'operation') }}"
      hvac_fan:
        friendly_name: "HVAC Fan"
        value_template: "{{ state_attr('climate.main_floor', 'fan') }}"
      harmony_activity:
        value_template: >
          {% if is_state("remote.harmony_hub", 'on') %}
            {{ states.remote.harmony_hub.attributes.current_activity }}
          {% else %}
            PowerOff
          {% endif %}
      office_source:
        value_template: >
          {% if is_state("media_player.office_speakers", 'on') %}
            {{ states.media_player.office_speakers.attributes.source }}
          {% else %}
            PowerOff
          {% endif %}
      thermostat_temperature:
        friendly_name: "Indoor Temperature"
        unit_of_measurement: '°F'
        value_template: "{{ state_attr('climate.main_floor', 'current_temperature') }}"

ffmpeg:

camera:
  - platform: ffmpeg
    name: backyard
    input: !secret unifi_camera_rstp
    extra_arguments: -pred 1 -q:v 2

switch: !include switch.yaml
